/*****************************************************************************/
/* CONFIGURATION */
/*****************************************************************************/
:root {
    /* DO NOT CHANGE THIS VALUE */
    --solidbox-count: 12;

    --solidbox-unit: 150px;
    --solidbox-outer-px-cannonical: min(2vw, 48px);

    --solidbox-cannonical-width: calc(var(--solidbox-unit) * var(--solidbox-count));
    --solidbox-responsive-width: calc(100lvw - 2 * var(--solidbox-outer-px-cannonical));

    --solidbox-width:
        max(min(var(--solidbox-cannonical-width),
                calc(var(--solidbox-responsive-width) - mod(var(--solidbox-responsive-width), var(--solidbox-unit)))),
            var(--solidbox-unit));
    --solidbox-outer-px: calc((100lvw - var(--solidbox-width))/2);

    --solidbox-layout-color: var(--color-default-solidbox-layout-color);
    --solidbox-layout-width: 1px;
}

@media (max-width: 468px) {
    :root {
        --solidbox-unit: 115px;
    }
}

@media (max-width: 360px) {
    :root {
        --solidbox-unit: 100px;
    }
}

/*****************************************************************************/

w,
.w,
h,
.h {
    display: flex;
    flex: 0 1 auto;
    flex-direction: row;

    &.reverse {
        flex-direction: row-reverse;
    }

    &.lhs {
        justify-content: flex-start;
    }

    &.rhs {
        justify-content: flex-end;
    }

    &.center {
        justify-content: center;
    }

    &.just {
        justify-content: space-between;
    }
}

w,
.w {
    width: 100%;
    max-width: min(var(--solidbox-width), 100%);
    margin-left: auto;
    margin-right: auto;
    flex-wrap: wrap;

    &.vertical {
        flex-direction: column;

        &-reverse {
            flex-direction: column-reverse;
        }
    }
}

h,
.h {
    flex-wrap: wrap;
    overflow: visible;

    align-items: flex-start;

    font-size: 0;

    &.wide {
        width: 100%;
        padding-left: var(--solidbox-outer-px);
        padding-right: var(--solidbox-outer-px);
    }
}

h,
.h {
    max-width: var(--solidbox-cannonical-width);
    width: var(--solidbox-width);
    margin-left: auto;
    margin-right: auto;
}

v,
.v {
    display: flex;
    flex: 0 0 auto;
    width: var(--solidbox-unit);
    max-width: 100%;
    font-size: 0;
    flex-direction: column;
    flex-wrap: wrap;

    &.horizontal {
        flex-direction: row;
    }

    &.wauto {
        width: auto;
        flex: 1;
    }

    &.wmax {
        width: 100%;
    }

    /* steps */
    @for $i from 0 to 12 {
        &.w$(i) {
            width: calc(var(--solidbox-unit) * $(i));
        }

        &.wmin$(i) {
            min-width: calc(var(--solidbox-unit) * $(i));
        }

        &.wmax$(i) {
            max-width: calc(var(--solidbox-unit) * $(i));
        }
    }
}


solidbox-layout {
    display: block;
    position: fixed;
    top: 0;
    left: 0;
    width: var(--solidbox-width);
    height: 100%;
    left: 50%;
    /* for some reason this fixes the dpi problem */
    will-change: transform;

    transform: translateX(-50%) translateZ(0);

    z-index: $z-index-solidbox-lines;

    pointer-events: none;

    @mixin gradient-vertical-lines var(--solidbox-layout-color), var(--solidbox-layout-width), var(--solidbox-unit);
    outline: var(--solidbox-layout-width) solid transparent;
    box-shadow: 1px 0px 0px 0px var(--solidbox-layout-color);
}

/* #solidbox-layout {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    pointer-events: none;
    z-index: $z-index-solidbox-lines;
}  */
